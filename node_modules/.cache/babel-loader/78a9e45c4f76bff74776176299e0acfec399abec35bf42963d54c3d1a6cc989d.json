{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ben Barkley\\\\Desktop\\\\Gloomme\\\\MovieApp\\\\src\\\\components\\\\movie-list\\\\MovieList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport propTypes from \"prop-types\";\nimport { SwiperSlide, Swiper } from \"swiper/react\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"../button/Button\";\nimport tmdbApi, { category } from \"../../api/tmdbApi\";\nimport apiConfig from \"../../api/ApiConfig\";\nimport MovieCard from \"../movie-card/MovieCard\";\nimport \"./movielist.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieList = props => {\n  _s();\n  const [items, setItems] = useState([]);\n  useEffect(() => {\n    const getList = async () => {\n      let response = null;\n      const params = {};\n      if (props.type !== \"similar\") {\n        switch (props.category) {\n          case category.movie:\n            response = await tmdbApi.getMoviesList(props.type, {\n              params\n            });\n            break;\n          default:\n            response = await tmdbApi.getTvList(props.type, {\n              params\n            });\n        }\n      } else {\n        response = await tmdbApi.similar(props.category, props.id);\n      }\n      setItems(response.results);\n    };\n    getList();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie__list\",\n    children: /*#__PURE__*/_jsxDEV(Swiper, {\n      grabCursor: true,\n      spaceBetween: 10,\n      slidesPerView: \"auto\",\n      children: items.map((item, i) => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n        children: /*#__PURE__*/_jsxDEV(MovieCard, {\n          item: item,\n          category: props.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieList, \"E85yb7BhBnl3/OpymRdjFiQJ97s=\");\n_c = MovieList;\nMovieList.propTypes = {\n  category: propTypes.string.isRequired,\n  type: propTypes.string.isRequired\n};\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","useState","useEffect","propTypes","SwiperSlide","Swiper","Link","Button","tmdbApi","category","apiConfig","MovieCard","jsxDEV","_jsxDEV","MovieList","props","_s","items","setItems","getList","response","params","type","movie","getMoviesList","getTvList","similar","id","results","className","children","grabCursor","spaceBetween","slidesPerView","map","item","i","fileName","_jsxFileName","lineNumber","columnNumber","_c","string","isRequired","$RefreshReg$"],"sources":["C:/Users/Ben Barkley/Desktop/Gloomme/MovieApp/src/components/movie-list/MovieList.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport { SwiperSlide, Swiper } from \"swiper/react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"../button/Button\";\r\nimport tmdbApi, { category } from \"../../api/tmdbApi\";\r\nimport apiConfig from \"../../api/ApiConfig\";\r\nimport MovieCard from \"../movie-card/MovieCard\";\r\nimport \"./movielist.css\";\r\n\r\nconst MovieList = (props) => {\r\n  const [items, setItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getList = async () => {\r\n      let response = null;\r\n      const params = {};\r\n\r\n      if (props.type !== \"similar\") {\r\n        switch (props.category) {\r\n          case category.movie:\r\n            response = await tmdbApi.getMoviesList(props.type, { params });\r\n            break;\r\n          default:\r\n            response = await tmdbApi.getTvList(props.type, { params });\r\n        }\r\n      } else {\r\n        response = await tmdbApi.similar(props.category, props.id);\r\n      }\r\n      setItems(response.results);\r\n    };\r\n    getList();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"movie__list\">\r\n      <Swiper grabCursor={true} spaceBetween={10} slidesPerView={\"auto\"}>\r\n        {items.map((item, i) => (\r\n          <SwiperSlide>\r\n            <MovieCard  item={item} category={props.category}/>\r\n          </SwiperSlide>\r\n        ))}\r\n      </Swiper>\r\n    </div>\r\n  );\r\n};\r\n\r\nMovieList.propTypes = {\r\n  category: propTypes.string.isRequired,\r\n  type: propTypes.string.isRequired,\r\n};\r\n\r\nexport default MovieList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,WAAW,EAAEC,MAAM,QAAQ,cAAc;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAOC,OAAO,IAAIC,QAAQ,QAAQ,mBAAmB;AACrD,OAAOC,SAAS,MAAM,qBAAqB;AAC3C,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMiB,OAAO,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAIC,QAAQ,GAAG,IAAI;MACnB,MAAMC,MAAM,GAAG,CAAC,CAAC;MAEjB,IAAIN,KAAK,CAACO,IAAI,KAAK,SAAS,EAAE;QAC5B,QAAQP,KAAK,CAACN,QAAQ;UACpB,KAAKA,QAAQ,CAACc,KAAK;YACjBH,QAAQ,GAAG,MAAMZ,OAAO,CAACgB,aAAa,CAACT,KAAK,CAACO,IAAI,EAAE;cAAED;YAAO,CAAC,CAAC;YAC9D;UACF;YACED,QAAQ,GAAG,MAAMZ,OAAO,CAACiB,SAAS,CAACV,KAAK,CAACO,IAAI,EAAE;cAAED;YAAO,CAAC,CAAC;QAC9D;MACF,CAAC,MAAM;QACLD,QAAQ,GAAG,MAAMZ,OAAO,CAACkB,OAAO,CAACX,KAAK,CAACN,QAAQ,EAAEM,KAAK,CAACY,EAAE,CAAC;MAC5D;MACAT,QAAQ,CAACE,QAAQ,CAACQ,OAAO,CAAC;IAC5B,CAAC;IACDT,OAAO,CAAC,CAAC;EACX,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,OAAA;IAAKgB,SAAS,EAAC,aAAa;IAAAC,QAAA,eAC1BjB,OAAA,CAACR,MAAM;MAAC0B,UAAU,EAAE,IAAK;MAACC,YAAY,EAAE,EAAG;MAACC,aAAa,EAAE,MAAO;MAAAH,QAAA,EAC/Db,KAAK,CAACiB,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,kBACjBvB,OAAA,CAACT,WAAW;QAAA0B,QAAA,eACVjB,OAAA,CAACF,SAAS;UAAEwB,IAAI,EAAEA,IAAK;UAAC1B,QAAQ,EAAEM,KAAK,CAACN;QAAS;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC,CACd;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACxB,EAAA,CAnCIF,SAAS;AAAA2B,EAAA,GAAT3B,SAAS;AAqCfA,SAAS,CAACX,SAAS,GAAG;EACpBM,QAAQ,EAAEN,SAAS,CAACuC,MAAM,CAACC,UAAU;EACrCrB,IAAI,EAAEnB,SAAS,CAACuC,MAAM,CAACC;AACzB,CAAC;AAED,eAAe7B,SAAS;AAAC,IAAA2B,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}